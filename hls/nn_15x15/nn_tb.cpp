#include <stdio.h>
#include <iostream>
#include "nn.hpp"

void decimalToBinary(int n) {
    // Handle 0 explicitly
    if (n == 0) {
        std::cout << "0";
        return;
    }

    // Print binary representation
    for (int i = 31; i >= 0; --i) {
        int bit = (n >> i) & 1; // Extract the i-th bit
        std::cout << bit;
    }
    std::cout << std::endl;
}


int main() {

	volatile float input_img[n_inputs] = {0.949020,0.988235,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.988235,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.988235,0.996078,0.996078,0.996078,0.996078,0.996078,0.988235,0.956863,0.988235,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.992157,0.996078,0.996078,0.996078,0.996078,
			0.996078,0.952941,0.639216,0.972549,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.988235,0.996078,0.996078,0.992157,0.988235,0.984314,0.800000,0.611765,0.976471,0.984314,0.984314,0.976471,0.992157,0.996078,0.996078,0.988235,0.996078,0.996078,0.992157,0.984314,0.976471,0.537255,0.843137,0.988235,0.984314,0.862745,0.741176,0.988235,0.996078,0.996078,0.984314,0.996078,0.996078,0.992157,0.984314,0.929412,0.482353,0.964706,0.984314,0.984314,
			0.662745,0.811765,0.992157,0.996078,0.996078,0.984314,0.996078,0.996078,0.996078,0.984314,0.882353,0.498039,0.952941,0.980392,0.976471,0.592157,0.827451,0.968627,0.972549,0.972549,0.992157,0.996078,0.996078,0.996078,0.988235,0.972549,0.756863,0.650980,0.662745,0.678431,0.419608,0.698039,0.749020,0.803922,0.886275,0.988235,0.996078,0.996078,0.996078,0.992157,0.988235,0.988235,0.988235,0.984314,0.909804,0.529412,0.960784,0.988235,0.992157,0.992157,
			0.988235,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.992157,0.819608,0.682353,0.980392,0.996078,0.996078,0.996078,0.984314,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.811765,0.749020,0.980392,0.996078,0.996078,0.996078,0.984314,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.992157,0.964706,0.882353,0.984314,0.996078,0.996078,0.996078,0.984314,0.996078,0.996078,0.996078,0.996078,
			0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.964706,0.992157,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078,0.996078}; // 4
	volatile int pred;
	int temp_pred;

	nn_inference(input_img,&pred);
	decimalToBinary(pred);

	std::cout << std::endl;

	std::cout << "NN Prediction: " << pred << std::endl;
	std::cout << std::endl;


	return 0;
}
