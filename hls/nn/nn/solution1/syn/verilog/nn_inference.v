// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2020.2 (64-bit)
// Version: 2020.2
// Copyright (C) Copyright 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="nn_inference_nn_inference,hls_ip_2020_2,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xczu3eg-sbva484-1-e,HLS_INPUT_CLOCK=10.000000,HLS_INPUT_ARCH=others,HLS_SYN_CLOCK=7.284616,HLS_SYN_LAT=-1,HLS_SYN_TPT=none,HLS_SYN_MEM=15,HLS_SYN_DSP=0,HLS_SYN_FF=3622,HLS_SYN_LUT=14064,HLS_VERSION=2020_2}" *)

module nn_inference (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        input_img_address0,
        input_img_ce0,
        input_img_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 19'd1;
parameter    ap_ST_fsm_pp0_stage0 = 19'd2;
parameter    ap_ST_fsm_state6 = 19'd4;
parameter    ap_ST_fsm_state7 = 19'd8;
parameter    ap_ST_fsm_state8 = 19'd16;
parameter    ap_ST_fsm_state9 = 19'd32;
parameter    ap_ST_fsm_state10 = 19'd64;
parameter    ap_ST_fsm_state11 = 19'd128;
parameter    ap_ST_fsm_state12 = 19'd256;
parameter    ap_ST_fsm_state13 = 19'd512;
parameter    ap_ST_fsm_state14 = 19'd1024;
parameter    ap_ST_fsm_state15 = 19'd2048;
parameter    ap_ST_fsm_state16 = 19'd4096;
parameter    ap_ST_fsm_state17 = 19'd8192;
parameter    ap_ST_fsm_state18 = 19'd16384;
parameter    ap_ST_fsm_state19 = 19'd32768;
parameter    ap_ST_fsm_state20 = 19'd65536;
parameter    ap_ST_fsm_pp1_stage0 = 19'd131072;
parameter    ap_ST_fsm_state23 = 19'd262144;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [6:0] input_img_address0;
output   input_img_ce0;
input  [31:0] input_img_q0;
output  [31:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg input_img_ce0;

(* fsm_encoding = "none" *) reg   [18:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [6:0] i_reg_257;
reg   [3:0] i_1_reg_268;
reg   [31:0] max_idx_V_reg_280;
reg   [31:0] max_val_V_reg_292;
wire   [6:0] add_ln5_fu_354_p2;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state3_pp0_stage0_iter1;
wire    ap_block_state4_pp0_stage0_iter2;
wire    ap_block_state5_pp0_stage0_iter3;
wire    ap_block_pp0_stage0_11001;
wire   [0:0] icmp_ln5_fu_360_p2;
reg   [0:0] icmp_ln5_reg_796;
reg   [0:0] icmp_ln5_reg_796_pp0_iter1_reg;
reg   [0:0] icmp_ln5_reg_796_pp0_iter2_reg;
wire   [63:0] i_cast_fu_366_p1;
reg   [63:0] i_cast_reg_800;
reg   [63:0] i_cast_reg_800_pp0_iter1_reg;
reg   [63:0] i_cast_reg_800_pp0_iter2_reg;
reg   [31:0] input_img_load_reg_810;
reg   [31:0] input_img_load_reg_810_pp0_iter2_reg;
reg   [0:0] p_Result_1_reg_820;
wire   [51:0] trunc_ln565_fu_406_p1;
reg   [51:0] trunc_ln565_reg_825;
wire   [0:0] icmp_ln571_fu_410_p2;
reg   [0:0] icmp_ln571_reg_830;
wire   [11:0] F2_fu_416_p2;
reg   [11:0] F2_reg_838;
wire   [0:0] icmp_ln138_fu_642_p2;
reg   [0:0] icmp_ln138_reg_846;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state21_pp1_stage0_iter0;
wire    ap_block_state22_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [3:0] add_ln138_fu_648_p2;
reg   [3:0] add_ln138_reg_850;
reg    ap_enable_reg_pp1_iter0;
wire   [3:0] or_ln138_fu_659_p2;
reg   [3:0] or_ln138_reg_860;
wire   [31:0] max_val_V_3_fu_710_p3;
reg    ap_enable_reg_pp1_iter1;
wire   [31:0] max_idx_V_3_fu_729_p3;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
wire    ap_CS_fsm_state20;
wire    grp_hwmm_layer4_fu_327_ap_ready;
wire    grp_hwmm_layer4_fu_327_ap_done;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state21;
reg   [6:0] fp_input_img_V_address0;
reg    fp_input_img_V_ce0;
reg    fp_input_img_V_we0;
reg   [31:0] fp_input_img_V_d0;
wire   [31:0] fp_input_img_V_q0;
reg    fp_input_img_V_ce1;
wire   [31:0] fp_input_img_V_q1;
reg   [5:0] temp_output_0_V_address0;
reg    temp_output_0_V_ce0;
reg    temp_output_0_V_we0;
reg   [31:0] temp_output_0_V_d0;
wire   [31:0] temp_output_0_V_q0;
reg   [5:0] temp_output_0_V_address1;
reg    temp_output_0_V_ce1;
reg    temp_output_0_V_we1;
wire   [31:0] temp_output_0_V_q1;
reg   [4:0] temp_output2_0_V_address0;
reg    temp_output2_0_V_ce0;
reg    temp_output2_0_V_we0;
reg   [31:0] temp_output2_0_V_d0;
wire   [31:0] temp_output2_0_V_q0;
reg   [4:0] temp_output2_0_V_address1;
reg    temp_output2_0_V_ce1;
reg    temp_output2_0_V_we1;
wire   [31:0] temp_output2_0_V_q1;
reg   [3:0] temp_output3_0_V_address0;
reg    temp_output3_0_V_ce0;
reg    temp_output3_0_V_we0;
reg   [31:0] temp_output3_0_V_d0;
wire   [31:0] temp_output3_0_V_q0;
reg   [3:0] temp_output3_0_V_address1;
reg    temp_output3_0_V_ce1;
reg    temp_output3_0_V_we1;
wire   [31:0] temp_output3_0_V_q1;
reg   [3:0] temp_output4_0_V_address0;
reg    temp_output4_0_V_ce0;
reg    temp_output4_0_V_we0;
reg   [31:0] temp_output4_0_V_d0;
wire   [31:0] temp_output4_0_V_q0;
wire   [3:0] temp_output4_0_V_address1;
reg    temp_output4_0_V_ce1;
wire   [31:0] temp_output4_0_V_q1;
wire    grp_hw_act_layer1_fu_304_ap_start;
wire    grp_hw_act_layer1_fu_304_ap_done;
wire    grp_hw_act_layer1_fu_304_ap_idle;
wire    grp_hw_act_layer1_fu_304_ap_ready;
wire   [5:0] grp_hw_act_layer1_fu_304_output_0_V_address0;
wire    grp_hw_act_layer1_fu_304_output_0_V_ce0;
wire    grp_hw_act_layer1_fu_304_output_0_V_we0;
wire   [31:0] grp_hw_act_layer1_fu_304_output_0_V_d0;
wire   [5:0] grp_hw_act_layer1_fu_304_output_0_V_address1;
wire    grp_hw_act_layer1_fu_304_output_0_V_ce1;
wire    grp_hw_act_layer1_fu_304_output_0_V_we1;
wire   [31:0] grp_hw_act_layer1_fu_304_output_0_V_d1;
wire   [63:0] grp_hw_act_layer1_fu_304_grp_fu_880_p_din0;
wire   [63:0] grp_hw_act_layer1_fu_304_grp_fu_880_p_din1;
wire   [4:0] grp_hw_act_layer1_fu_304_grp_fu_880_p_opcode;
wire   [0:0] grp_hw_act_layer1_fu_304_grp_fu_880_p_dout0;
wire    grp_hw_act_layer1_fu_304_grp_fu_880_p_ce;
wire    grp_hw_act_layer2_fu_309_ap_start;
wire    grp_hw_act_layer2_fu_309_ap_done;
wire    grp_hw_act_layer2_fu_309_ap_idle;
wire    grp_hw_act_layer2_fu_309_ap_ready;
wire   [4:0] grp_hw_act_layer2_fu_309_output_0_V_address0;
wire    grp_hw_act_layer2_fu_309_output_0_V_ce0;
wire    grp_hw_act_layer2_fu_309_output_0_V_we0;
wire   [31:0] grp_hw_act_layer2_fu_309_output_0_V_d0;
wire   [4:0] grp_hw_act_layer2_fu_309_output_0_V_address1;
wire    grp_hw_act_layer2_fu_309_output_0_V_ce1;
wire    grp_hw_act_layer2_fu_309_output_0_V_we1;
wire   [31:0] grp_hw_act_layer2_fu_309_output_0_V_d1;
wire   [63:0] grp_hw_act_layer2_fu_309_grp_fu_880_p_din0;
wire   [63:0] grp_hw_act_layer2_fu_309_grp_fu_880_p_din1;
wire   [4:0] grp_hw_act_layer2_fu_309_grp_fu_880_p_opcode;
wire   [0:0] grp_hw_act_layer2_fu_309_grp_fu_880_p_dout0;
wire    grp_hw_act_layer2_fu_309_grp_fu_880_p_ce;
wire    grp_hw_act_layer3_fu_314_ap_start;
wire    grp_hw_act_layer3_fu_314_ap_done;
wire    grp_hw_act_layer3_fu_314_ap_idle;
wire    grp_hw_act_layer3_fu_314_ap_ready;
wire   [3:0] grp_hw_act_layer3_fu_314_output_0_V_address0;
wire    grp_hw_act_layer3_fu_314_output_0_V_ce0;
wire    grp_hw_act_layer3_fu_314_output_0_V_we0;
wire   [31:0] grp_hw_act_layer3_fu_314_output_0_V_d0;
wire   [3:0] grp_hw_act_layer3_fu_314_output_0_V_address1;
wire    grp_hw_act_layer3_fu_314_output_0_V_ce1;
wire    grp_hw_act_layer3_fu_314_output_0_V_we1;
wire   [31:0] grp_hw_act_layer3_fu_314_output_0_V_d1;
wire   [63:0] grp_hw_act_layer3_fu_314_grp_fu_880_p_din0;
wire   [63:0] grp_hw_act_layer3_fu_314_grp_fu_880_p_din1;
wire   [4:0] grp_hw_act_layer3_fu_314_grp_fu_880_p_opcode;
wire   [0:0] grp_hw_act_layer3_fu_314_grp_fu_880_p_dout0;
wire    grp_hw_act_layer3_fu_314_grp_fu_880_p_ce;
wire    grp_hwmm_layer1_fu_319_ap_start;
wire    grp_hwmm_layer1_fu_319_ap_done;
wire    grp_hwmm_layer1_fu_319_ap_idle;
wire    grp_hwmm_layer1_fu_319_ap_ready;
wire   [6:0] grp_hwmm_layer1_fu_319_input_r_address0;
wire    grp_hwmm_layer1_fu_319_input_r_ce0;
wire   [6:0] grp_hwmm_layer1_fu_319_input_r_address1;
wire    grp_hwmm_layer1_fu_319_input_r_ce1;
wire   [5:0] grp_hwmm_layer1_fu_319_output_0_address0;
wire    grp_hwmm_layer1_fu_319_output_0_ce0;
wire    grp_hwmm_layer1_fu_319_output_0_we0;
wire   [31:0] grp_hwmm_layer1_fu_319_output_0_d0;
wire    grp_hwmm_layer4_fu_327_ap_start;
wire    grp_hwmm_layer4_fu_327_ap_idle;
wire   [3:0] grp_hwmm_layer4_fu_327_input_0_address0;
wire    grp_hwmm_layer4_fu_327_input_0_ce0;
wire   [3:0] grp_hwmm_layer4_fu_327_input_0_address1;
wire    grp_hwmm_layer4_fu_327_input_0_ce1;
wire   [3:0] grp_hwmm_layer4_fu_327_output_0_address0;
wire    grp_hwmm_layer4_fu_327_output_0_ce0;
wire    grp_hwmm_layer4_fu_327_output_0_we0;
wire   [31:0] grp_hwmm_layer4_fu_327_output_0_d0;
wire    grp_hwmm_layer2_fu_335_ap_start;
wire    grp_hwmm_layer2_fu_335_ap_done;
wire    grp_hwmm_layer2_fu_335_ap_idle;
wire    grp_hwmm_layer2_fu_335_ap_ready;
wire   [5:0] grp_hwmm_layer2_fu_335_input_0_address0;
wire    grp_hwmm_layer2_fu_335_input_0_ce0;
wire   [5:0] grp_hwmm_layer2_fu_335_input_0_address1;
wire    grp_hwmm_layer2_fu_335_input_0_ce1;
wire   [4:0] grp_hwmm_layer2_fu_335_output_0_address0;
wire    grp_hwmm_layer2_fu_335_output_0_ce0;
wire    grp_hwmm_layer2_fu_335_output_0_we0;
wire   [31:0] grp_hwmm_layer2_fu_335_output_0_d0;
wire    grp_hwmm_layer3_fu_343_ap_start;
wire    grp_hwmm_layer3_fu_343_ap_done;
wire    grp_hwmm_layer3_fu_343_ap_idle;
wire    grp_hwmm_layer3_fu_343_ap_ready;
wire   [4:0] grp_hwmm_layer3_fu_343_input_0_address0;
wire    grp_hwmm_layer3_fu_343_input_0_ce0;
wire   [4:0] grp_hwmm_layer3_fu_343_input_0_address1;
wire    grp_hwmm_layer3_fu_343_input_0_ce1;
wire   [3:0] grp_hwmm_layer3_fu_343_output_0_address0;
wire    grp_hwmm_layer3_fu_343_output_0_ce0;
wire    grp_hwmm_layer3_fu_343_output_0_we0;
wire   [31:0] grp_hwmm_layer3_fu_343_output_0_d0;
reg   [3:0] ap_phi_mux_i_1_phi_fu_272_p4;
wire    ap_block_pp1_stage0;
reg    grp_hw_act_layer1_fu_304_ap_start_reg;
wire    ap_CS_fsm_state9;
wire    ap_CS_fsm_state10;
reg    grp_hw_act_layer2_fu_309_ap_start_reg;
wire    ap_CS_fsm_state13;
wire    ap_CS_fsm_state14;
reg    grp_hw_act_layer3_fu_314_ap_start_reg;
wire    ap_CS_fsm_state17;
wire    ap_CS_fsm_state18;
reg    grp_hwmm_layer1_fu_319_ap_start_reg;
wire    ap_CS_fsm_state7;
wire    ap_CS_fsm_state8;
reg    grp_hwmm_layer4_fu_327_ap_start_reg;
wire    ap_CS_fsm_state19;
reg    grp_hwmm_layer2_fu_335_ap_start_reg;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state12;
reg    grp_hwmm_layer3_fu_343_ap_start_reg;
wire    ap_CS_fsm_state15;
wire    ap_CS_fsm_state16;
wire    ap_block_pp0_stage0;
wire    ap_CS_fsm_state6;
wire   [63:0] trunc_ln731_1_cast_fu_654_p1;
wire   [63:0] zext_ln137_fu_665_p1;
wire   [31:0] select_ln571_4_fu_633_p3;
wire   [31:0] grp_fu_351_p0;
wire   [63:0] grp_fu_351_p1;
wire   [63:0] ireg_fu_376_p1;
wire   [10:0] exp_tmp_fu_392_p4;
wire   [62:0] trunc_ln555_fu_380_p1;
wire   [11:0] zext_ln455_fu_402_p1;
wire   [52:0] p_Result_2_fu_422_p3;
wire   [53:0] zext_ln569_fu_429_p1;
wire   [53:0] man_V_1_fu_433_p2;
wire   [0:0] icmp_ln581_fu_446_p2;
wire   [11:0] add_ln581_fu_451_p2;
wire   [11:0] sub_ln581_fu_456_p2;
wire  signed [11:0] sh_amt_fu_461_p3;
wire   [53:0] man_V_2_fu_439_p3;
wire   [6:0] tmp_fu_482_p4;
wire  signed [31:0] sext_ln581_fu_469_p1;
wire   [53:0] zext_ln586_fu_498_p1;
wire   [53:0] ashr_ln586_fu_502_p2;
wire   [0:0] tmp_1_fu_512_p3;
wire   [31:0] trunc_ln583_fu_478_p1;
wire   [0:0] icmp_ln582_fu_473_p2;
wire   [0:0] xor_ln571_fu_533_p2;
wire   [0:0] or_ln582_fu_544_p2;
wire   [0:0] xor_ln582_fu_549_p2;
wire   [0:0] and_ln581_fu_555_p2;
wire   [0:0] icmp_ln585_fu_561_p2;
wire   [0:0] or_ln581_fu_573_p2;
wire   [0:0] icmp_ln603_fu_492_p2;
wire   [0:0] xor_ln581_fu_579_p2;
wire   [31:0] shl_ln604_fu_527_p2;
wire   [0:0] and_ln603_fu_585_p2;
wire   [0:0] and_ln585_fu_567_p2;
wire   [31:0] select_ln588_fu_519_p3;
wire   [31:0] trunc_ln586_fu_508_p1;
wire   [0:0] and_ln582_fu_538_p2;
wire   [0:0] or_ln571_fu_598_p2;
wire   [31:0] select_ln571_fu_591_p3;
wire   [31:0] select_ln571_1_fu_603_p3;
wire   [0:0] or_ln571_1_fu_627_p2;
wire   [31:0] select_ln571_3_fu_619_p3;
wire   [31:0] select_ln571_2_fu_611_p3;
wire   [0:0] icmp_ln1494_fu_670_p2;
wire   [11:0] shl_ln_fu_684_p3;
wire   [31:0] zext_ln140_fu_692_p1;
wire   [31:0] max_val_V_1_fu_676_p3;
wire   [0:0] icmp_ln1494_1_fu_704_p2;
wire   [11:0] shl_ln140_1_fu_718_p3;
wire   [31:0] zext_ln140_1_fu_725_p1;
wire   [31:0] max_idx_V_1_fu_696_p3;
wire    ap_CS_fsm_state23;
wire   [7:0] trunc_ln851_fu_755_p1;
wire   [23:0] ret_V_fu_737_p4;
wire   [0:0] icmp_ln851_fu_759_p2;
wire   [23:0] ret_V_1_fu_765_p2;
wire   [0:0] p_Result_s_fu_747_p3;
wire   [23:0] select_ln850_fu_771_p3;
wire   [23:0] ret_V_3_fu_779_p3;
wire   [0:0] grp_fu_880_p2;
reg   [63:0] grp_fu_880_p0;
reg   [63:0] grp_fu_880_p1;
reg    grp_fu_880_ce;
reg   [4:0] grp_fu_880_opcode;
reg   [18:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 19'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 grp_hw_act_layer1_fu_304_ap_start_reg = 1'b0;
#0 grp_hw_act_layer2_fu_309_ap_start_reg = 1'b0;
#0 grp_hw_act_layer3_fu_314_ap_start_reg = 1'b0;
#0 grp_hwmm_layer1_fu_319_ap_start_reg = 1'b0;
#0 grp_hwmm_layer4_fu_327_ap_start_reg = 1'b0;
#0 grp_hwmm_layer2_fu_335_ap_start_reg = 1'b0;
#0 grp_hwmm_layer3_fu_343_ap_start_reg = 1'b0;
end

nn_inference_fp_input_img_V #(
    .DataWidth( 32 ),
    .AddressRange( 100 ),
    .AddressWidth( 7 ))
fp_input_img_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(fp_input_img_V_address0),
    .ce0(fp_input_img_V_ce0),
    .we0(fp_input_img_V_we0),
    .d0(fp_input_img_V_d0),
    .q0(fp_input_img_V_q0),
    .address1(grp_hwmm_layer1_fu_319_input_r_address1),
    .ce1(fp_input_img_V_ce1),
    .q1(fp_input_img_V_q1)
);

nn_inference_temp_output_0_V #(
    .DataWidth( 32 ),
    .AddressRange( 64 ),
    .AddressWidth( 6 ))
temp_output_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_output_0_V_address0),
    .ce0(temp_output_0_V_ce0),
    .we0(temp_output_0_V_we0),
    .d0(temp_output_0_V_d0),
    .q0(temp_output_0_V_q0),
    .address1(temp_output_0_V_address1),
    .ce1(temp_output_0_V_ce1),
    .we1(temp_output_0_V_we1),
    .d1(grp_hw_act_layer1_fu_304_output_0_V_d1),
    .q1(temp_output_0_V_q1)
);

nn_inference_temp_output2_0_V #(
    .DataWidth( 32 ),
    .AddressRange( 32 ),
    .AddressWidth( 5 ))
temp_output2_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_output2_0_V_address0),
    .ce0(temp_output2_0_V_ce0),
    .we0(temp_output2_0_V_we0),
    .d0(temp_output2_0_V_d0),
    .q0(temp_output2_0_V_q0),
    .address1(temp_output2_0_V_address1),
    .ce1(temp_output2_0_V_ce1),
    .we1(temp_output2_0_V_we1),
    .d1(grp_hw_act_layer2_fu_309_output_0_V_d1),
    .q1(temp_output2_0_V_q1)
);

nn_inference_temp_output3_0_V #(
    .DataWidth( 32 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
temp_output3_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_output3_0_V_address0),
    .ce0(temp_output3_0_V_ce0),
    .we0(temp_output3_0_V_we0),
    .d0(temp_output3_0_V_d0),
    .q0(temp_output3_0_V_q0),
    .address1(temp_output3_0_V_address1),
    .ce1(temp_output3_0_V_ce1),
    .we1(temp_output3_0_V_we1),
    .d1(grp_hw_act_layer3_fu_314_output_0_V_d1),
    .q1(temp_output3_0_V_q1)
);

nn_inference_temp_output4_0_V #(
    .DataWidth( 32 ),
    .AddressRange( 10 ),
    .AddressWidth( 4 ))
temp_output4_0_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(temp_output4_0_V_address0),
    .ce0(temp_output4_0_V_ce0),
    .we0(temp_output4_0_V_we0),
    .d0(temp_output4_0_V_d0),
    .q0(temp_output4_0_V_q0),
    .address1(temp_output4_0_V_address1),
    .ce1(temp_output4_0_V_ce1),
    .q1(temp_output4_0_V_q1)
);

nn_inference_hw_act_layer1 grp_hw_act_layer1_fu_304(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_hw_act_layer1_fu_304_ap_start),
    .ap_done(grp_hw_act_layer1_fu_304_ap_done),
    .ap_idle(grp_hw_act_layer1_fu_304_ap_idle),
    .ap_ready(grp_hw_act_layer1_fu_304_ap_ready),
    .output_0_V_address0(grp_hw_act_layer1_fu_304_output_0_V_address0),
    .output_0_V_ce0(grp_hw_act_layer1_fu_304_output_0_V_ce0),
    .output_0_V_we0(grp_hw_act_layer1_fu_304_output_0_V_we0),
    .output_0_V_d0(grp_hw_act_layer1_fu_304_output_0_V_d0),
    .output_0_V_q0(temp_output_0_V_q0),
    .output_0_V_address1(grp_hw_act_layer1_fu_304_output_0_V_address1),
    .output_0_V_ce1(grp_hw_act_layer1_fu_304_output_0_V_ce1),
    .output_0_V_we1(grp_hw_act_layer1_fu_304_output_0_V_we1),
    .output_0_V_d1(grp_hw_act_layer1_fu_304_output_0_V_d1),
    .output_0_V_q1(temp_output_0_V_q1),
    .grp_fu_880_p_din0(grp_hw_act_layer1_fu_304_grp_fu_880_p_din0),
    .grp_fu_880_p_din1(grp_hw_act_layer1_fu_304_grp_fu_880_p_din1),
    .grp_fu_880_p_opcode(grp_hw_act_layer1_fu_304_grp_fu_880_p_opcode),
    .grp_fu_880_p_dout0(grp_hw_act_layer1_fu_304_grp_fu_880_p_dout0),
    .grp_fu_880_p_ce(grp_hw_act_layer1_fu_304_grp_fu_880_p_ce)
);

nn_inference_hw_act_layer2 grp_hw_act_layer2_fu_309(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_hw_act_layer2_fu_309_ap_start),
    .ap_done(grp_hw_act_layer2_fu_309_ap_done),
    .ap_idle(grp_hw_act_layer2_fu_309_ap_idle),
    .ap_ready(grp_hw_act_layer2_fu_309_ap_ready),
    .output_0_V_address0(grp_hw_act_layer2_fu_309_output_0_V_address0),
    .output_0_V_ce0(grp_hw_act_layer2_fu_309_output_0_V_ce0),
    .output_0_V_we0(grp_hw_act_layer2_fu_309_output_0_V_we0),
    .output_0_V_d0(grp_hw_act_layer2_fu_309_output_0_V_d0),
    .output_0_V_q0(temp_output2_0_V_q0),
    .output_0_V_address1(grp_hw_act_layer2_fu_309_output_0_V_address1),
    .output_0_V_ce1(grp_hw_act_layer2_fu_309_output_0_V_ce1),
    .output_0_V_we1(grp_hw_act_layer2_fu_309_output_0_V_we1),
    .output_0_V_d1(grp_hw_act_layer2_fu_309_output_0_V_d1),
    .output_0_V_q1(temp_output2_0_V_q1),
    .grp_fu_880_p_din0(grp_hw_act_layer2_fu_309_grp_fu_880_p_din0),
    .grp_fu_880_p_din1(grp_hw_act_layer2_fu_309_grp_fu_880_p_din1),
    .grp_fu_880_p_opcode(grp_hw_act_layer2_fu_309_grp_fu_880_p_opcode),
    .grp_fu_880_p_dout0(grp_hw_act_layer2_fu_309_grp_fu_880_p_dout0),
    .grp_fu_880_p_ce(grp_hw_act_layer2_fu_309_grp_fu_880_p_ce)
);

nn_inference_hw_act_layer3 grp_hw_act_layer3_fu_314(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_hw_act_layer3_fu_314_ap_start),
    .ap_done(grp_hw_act_layer3_fu_314_ap_done),
    .ap_idle(grp_hw_act_layer3_fu_314_ap_idle),
    .ap_ready(grp_hw_act_layer3_fu_314_ap_ready),
    .output_0_V_address0(grp_hw_act_layer3_fu_314_output_0_V_address0),
    .output_0_V_ce0(grp_hw_act_layer3_fu_314_output_0_V_ce0),
    .output_0_V_we0(grp_hw_act_layer3_fu_314_output_0_V_we0),
    .output_0_V_d0(grp_hw_act_layer3_fu_314_output_0_V_d0),
    .output_0_V_q0(temp_output3_0_V_q0),
    .output_0_V_address1(grp_hw_act_layer3_fu_314_output_0_V_address1),
    .output_0_V_ce1(grp_hw_act_layer3_fu_314_output_0_V_ce1),
    .output_0_V_we1(grp_hw_act_layer3_fu_314_output_0_V_we1),
    .output_0_V_d1(grp_hw_act_layer3_fu_314_output_0_V_d1),
    .output_0_V_q1(temp_output3_0_V_q1),
    .grp_fu_880_p_din0(grp_hw_act_layer3_fu_314_grp_fu_880_p_din0),
    .grp_fu_880_p_din1(grp_hw_act_layer3_fu_314_grp_fu_880_p_din1),
    .grp_fu_880_p_opcode(grp_hw_act_layer3_fu_314_grp_fu_880_p_opcode),
    .grp_fu_880_p_dout0(grp_hw_act_layer3_fu_314_grp_fu_880_p_dout0),
    .grp_fu_880_p_ce(grp_hw_act_layer3_fu_314_grp_fu_880_p_ce)
);

nn_inference_hwmm_layer1 grp_hwmm_layer1_fu_319(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_hwmm_layer1_fu_319_ap_start),
    .ap_done(grp_hwmm_layer1_fu_319_ap_done),
    .ap_idle(grp_hwmm_layer1_fu_319_ap_idle),
    .ap_ready(grp_hwmm_layer1_fu_319_ap_ready),
    .input_r_address0(grp_hwmm_layer1_fu_319_input_r_address0),
    .input_r_ce0(grp_hwmm_layer1_fu_319_input_r_ce0),
    .input_r_q0(fp_input_img_V_q0),
    .input_r_address1(grp_hwmm_layer1_fu_319_input_r_address1),
    .input_r_ce1(grp_hwmm_layer1_fu_319_input_r_ce1),
    .input_r_q1(fp_input_img_V_q1),
    .output_0_address0(grp_hwmm_layer1_fu_319_output_0_address0),
    .output_0_ce0(grp_hwmm_layer1_fu_319_output_0_ce0),
    .output_0_we0(grp_hwmm_layer1_fu_319_output_0_we0),
    .output_0_d0(grp_hwmm_layer1_fu_319_output_0_d0)
);

nn_inference_hwmm_layer4 grp_hwmm_layer4_fu_327(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_hwmm_layer4_fu_327_ap_start),
    .ap_done(grp_hwmm_layer4_fu_327_ap_done),
    .ap_idle(grp_hwmm_layer4_fu_327_ap_idle),
    .ap_ready(grp_hwmm_layer4_fu_327_ap_ready),
    .input_0_address0(grp_hwmm_layer4_fu_327_input_0_address0),
    .input_0_ce0(grp_hwmm_layer4_fu_327_input_0_ce0),
    .input_0_q0(temp_output3_0_V_q0),
    .input_0_address1(grp_hwmm_layer4_fu_327_input_0_address1),
    .input_0_ce1(grp_hwmm_layer4_fu_327_input_0_ce1),
    .input_0_q1(temp_output3_0_V_q1),
    .output_0_address0(grp_hwmm_layer4_fu_327_output_0_address0),
    .output_0_ce0(grp_hwmm_layer4_fu_327_output_0_ce0),
    .output_0_we0(grp_hwmm_layer4_fu_327_output_0_we0),
    .output_0_d0(grp_hwmm_layer4_fu_327_output_0_d0)
);

nn_inference_hwmm_layer2 grp_hwmm_layer2_fu_335(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_hwmm_layer2_fu_335_ap_start),
    .ap_done(grp_hwmm_layer2_fu_335_ap_done),
    .ap_idle(grp_hwmm_layer2_fu_335_ap_idle),
    .ap_ready(grp_hwmm_layer2_fu_335_ap_ready),
    .input_0_address0(grp_hwmm_layer2_fu_335_input_0_address0),
    .input_0_ce0(grp_hwmm_layer2_fu_335_input_0_ce0),
    .input_0_q0(temp_output_0_V_q0),
    .input_0_address1(grp_hwmm_layer2_fu_335_input_0_address1),
    .input_0_ce1(grp_hwmm_layer2_fu_335_input_0_ce1),
    .input_0_q1(temp_output_0_V_q1),
    .output_0_address0(grp_hwmm_layer2_fu_335_output_0_address0),
    .output_0_ce0(grp_hwmm_layer2_fu_335_output_0_ce0),
    .output_0_we0(grp_hwmm_layer2_fu_335_output_0_we0),
    .output_0_d0(grp_hwmm_layer2_fu_335_output_0_d0)
);

nn_inference_hwmm_layer3 grp_hwmm_layer3_fu_343(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_hwmm_layer3_fu_343_ap_start),
    .ap_done(grp_hwmm_layer3_fu_343_ap_done),
    .ap_idle(grp_hwmm_layer3_fu_343_ap_idle),
    .ap_ready(grp_hwmm_layer3_fu_343_ap_ready),
    .input_0_address0(grp_hwmm_layer3_fu_343_input_0_address0),
    .input_0_ce0(grp_hwmm_layer3_fu_343_input_0_ce0),
    .input_0_q0(temp_output2_0_V_q0),
    .input_0_address1(grp_hwmm_layer3_fu_343_input_0_address1),
    .input_0_ce1(grp_hwmm_layer3_fu_343_input_0_ce1),
    .input_0_q1(temp_output2_0_V_q1),
    .output_0_address0(grp_hwmm_layer3_fu_343_output_0_address0),
    .output_0_ce0(grp_hwmm_layer3_fu_343_output_0_ce0),
    .output_0_we0(grp_hwmm_layer3_fu_343_output_0_we0),
    .output_0_d0(grp_hwmm_layer3_fu_343_output_0_d0)
);

nn_inference_fpext_32ns_64_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 64 ))
fpext_32ns_64_2_no_dsp_1_U55(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_351_p0),
    .ce(1'b1),
    .dout(grp_fu_351_p1)
);

nn_inference_dcmp_64ns_64ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 64 ),
    .dout_WIDTH( 1 ))
dcmp_64ns_64ns_1_2_no_dsp_1_U56(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_880_p0),
    .din1(grp_fu_880_p1),
    .ce(grp_fu_880_ce),
    .opcode(grp_fu_880_opcode),
    .dout(grp_fu_880_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state2))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp0_exit_iter0_state2)) begin
                ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state2);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter3 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state21) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state20) & (grp_hwmm_layer4_fu_327_ap_done == 1'b1))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state21))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state21);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((1'b1 == ap_CS_fsm_state20) & (grp_hwmm_layer4_fu_327_ap_done == 1'b1))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_hw_act_layer1_fu_304_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state9)) begin
            grp_hw_act_layer1_fu_304_ap_start_reg <= 1'b1;
        end else if ((grp_hw_act_layer1_fu_304_ap_ready == 1'b1)) begin
            grp_hw_act_layer1_fu_304_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_hw_act_layer2_fu_309_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state13)) begin
            grp_hw_act_layer2_fu_309_ap_start_reg <= 1'b1;
        end else if ((grp_hw_act_layer2_fu_309_ap_ready == 1'b1)) begin
            grp_hw_act_layer2_fu_309_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_hw_act_layer3_fu_314_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state17)) begin
            grp_hw_act_layer3_fu_314_ap_start_reg <= 1'b1;
        end else if ((grp_hw_act_layer3_fu_314_ap_ready == 1'b1)) begin
            grp_hw_act_layer3_fu_314_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_hwmm_layer1_fu_319_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state7)) begin
            grp_hwmm_layer1_fu_319_ap_start_reg <= 1'b1;
        end else if ((grp_hwmm_layer1_fu_319_ap_ready == 1'b1)) begin
            grp_hwmm_layer1_fu_319_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_hwmm_layer2_fu_335_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state11)) begin
            grp_hwmm_layer2_fu_335_ap_start_reg <= 1'b1;
        end else if ((grp_hwmm_layer2_fu_335_ap_ready == 1'b1)) begin
            grp_hwmm_layer2_fu_335_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_hwmm_layer3_fu_343_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state15)) begin
            grp_hwmm_layer3_fu_343_ap_start_reg <= 1'b1;
        end else if ((grp_hwmm_layer3_fu_343_ap_ready == 1'b1)) begin
            grp_hwmm_layer3_fu_343_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_hwmm_layer4_fu_327_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state19)) begin
            grp_hwmm_layer4_fu_327_ap_start_reg <= 1'b1;
        end else if ((grp_hwmm_layer4_fu_327_ap_ready == 1'b1)) begin
            grp_hwmm_layer4_fu_327_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (grp_hwmm_layer4_fu_327_ap_done == 1'b1))) begin
        i_1_reg_268 <= 4'd0;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln138_reg_846 == 1'd1))) begin
        i_1_reg_268 <= add_ln138_reg_850;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_reg_257 <= 7'd0;
    end else if (((icmp_ln5_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_reg_257 <= add_ln5_fu_354_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (grp_hwmm_layer4_fu_327_ap_done == 1'b1))) begin
        max_idx_V_reg_280 <= 32'd4294967040;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln138_reg_846 == 1'd1))) begin
        max_idx_V_reg_280 <= max_idx_V_3_fu_729_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state20) & (grp_hwmm_layer4_fu_327_ap_done == 1'b1))) begin
        max_val_V_reg_292 <= 32'd4294935040;
    end else if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln138_reg_846 == 1'd1))) begin
        max_val_V_reg_292 <= max_val_V_3_fu_710_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln5_reg_796_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        F2_reg_838 <= F2_fu_416_p2;
        icmp_ln571_reg_830 <= icmp_ln571_fu_410_p2;
        p_Result_1_reg_820 <= ireg_fu_376_p1[32'd63];
        trunc_ln565_reg_825 <= trunc_ln565_fu_406_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln138_fu_642_p2 == 1'd1))) begin
        add_ln138_reg_850 <= add_ln138_fu_648_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln5_fu_360_p2 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_cast_reg_800[6 : 0] <= i_cast_fu_366_p1[6 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_cast_reg_800_pp0_iter1_reg[6 : 0] <= i_cast_reg_800[6 : 0];
        icmp_ln5_reg_796 <= icmp_ln5_fu_360_p2;
        icmp_ln5_reg_796_pp0_iter1_reg <= icmp_ln5_reg_796;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp0_stage0_11001)) begin
        i_cast_reg_800_pp0_iter2_reg[6 : 0] <= i_cast_reg_800_pp0_iter1_reg[6 : 0];
        icmp_ln5_reg_796_pp0_iter2_reg <= icmp_ln5_reg_796_pp0_iter1_reg;
        input_img_load_reg_810_pp0_iter2_reg <= input_img_load_reg_810;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        icmp_ln138_reg_846 <= icmp_ln138_fu_642_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln5_reg_796 == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_img_load_reg_810 <= input_img_q0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (icmp_ln138_fu_642_p2 == 1'd1))) begin
        or_ln138_reg_860[3 : 1] <= or_ln138_fu_659_p2[3 : 1];
    end
end

always @ (*) begin
    if ((icmp_ln5_fu_360_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln138_fu_642_p2 == 1'd0)) begin
        ap_condition_pp1_exit_iter0_state21 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state21 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (icmp_ln138_reg_846 == 1'd1))) begin
        ap_phi_mux_i_1_phi_fu_272_p4 = add_ln138_reg_850;
    end else begin
        ap_phi_mux_i_1_phi_fu_272_p4 = i_1_reg_268;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state23)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        fp_input_img_V_address0 = i_cast_reg_800_pp0_iter2_reg;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        fp_input_img_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fp_input_img_V_address0 = grp_hwmm_layer1_fu_319_input_r_address0;
    end else begin
        fp_input_img_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        fp_input_img_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        fp_input_img_V_ce0 = grp_hwmm_layer1_fu_319_input_r_ce0;
    end else begin
        fp_input_img_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        fp_input_img_V_ce1 = grp_hwmm_layer1_fu_319_input_r_ce1;
    end else begin
        fp_input_img_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1))) begin
        fp_input_img_V_d0 = select_ln571_4_fu_633_p3;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        fp_input_img_V_d0 = 32'd256;
    end else begin
        fp_input_img_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln5_reg_796_pp0_iter2_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1)) | ((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1)))) begin
        fp_input_img_V_we0 = 1'b1;
    end else begin
        fp_input_img_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_880_ce = grp_hw_act_layer3_fu_314_grp_fu_880_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_880_ce = grp_hw_act_layer2_fu_309_grp_fu_880_p_ce;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_880_ce = grp_hw_act_layer1_fu_304_grp_fu_880_p_ce;
    end else begin
        grp_fu_880_ce = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_880_opcode = grp_hw_act_layer3_fu_314_grp_fu_880_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_880_opcode = grp_hw_act_layer2_fu_309_grp_fu_880_p_opcode;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_880_opcode = grp_hw_act_layer1_fu_304_grp_fu_880_p_opcode;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_880_p0 = grp_hw_act_layer3_fu_314_grp_fu_880_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_880_p0 = grp_hw_act_layer2_fu_309_grp_fu_880_p_din0;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_880_p0 = grp_hw_act_layer1_fu_304_grp_fu_880_p_din0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17))) begin
        grp_fu_880_p1 = grp_hw_act_layer3_fu_314_grp_fu_880_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_880_p1 = grp_hw_act_layer2_fu_309_grp_fu_880_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9))) begin
        grp_fu_880_p1 = grp_hw_act_layer1_fu_304_grp_fu_880_p_din1;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        input_img_ce0 = 1'b1;
    end else begin
        input_img_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        temp_output2_0_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        temp_output2_0_V_address0 = grp_hwmm_layer3_fu_343_input_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_output2_0_V_address0 = grp_hwmm_layer2_fu_335_output_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_output2_0_V_address0 = grp_hw_act_layer2_fu_309_output_0_V_address0;
    end else begin
        temp_output2_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        temp_output2_0_V_address1 = grp_hwmm_layer3_fu_343_input_0_address1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_output2_0_V_address1 = grp_hw_act_layer2_fu_309_output_0_V_address1;
    end else begin
        temp_output2_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        temp_output2_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        temp_output2_0_V_ce0 = grp_hwmm_layer3_fu_343_input_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_output2_0_V_ce0 = grp_hwmm_layer2_fu_335_output_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_output2_0_V_ce0 = grp_hw_act_layer2_fu_309_output_0_V_ce0;
    end else begin
        temp_output2_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        temp_output2_0_V_ce1 = grp_hwmm_layer3_fu_343_input_0_ce1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_output2_0_V_ce1 = grp_hw_act_layer2_fu_309_output_0_V_ce1;
    end else begin
        temp_output2_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        temp_output2_0_V_d0 = 32'd256;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_output2_0_V_d0 = grp_hwmm_layer2_fu_335_output_0_d0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_output2_0_V_d0 = grp_hw_act_layer2_fu_309_output_0_V_d0;
    end else begin
        temp_output2_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        temp_output2_0_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_output2_0_V_we0 = grp_hwmm_layer2_fu_335_output_0_we0;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_output2_0_V_we0 = grp_hw_act_layer2_fu_309_output_0_V_we0;
    end else begin
        temp_output2_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_output2_0_V_we1 = grp_hw_act_layer2_fu_309_output_0_V_we1;
    end else begin
        temp_output2_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_output3_0_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        temp_output3_0_V_address0 = grp_hwmm_layer3_fu_343_output_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        temp_output3_0_V_address0 = grp_hwmm_layer4_fu_327_input_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        temp_output3_0_V_address0 = grp_hw_act_layer3_fu_314_output_0_V_address0;
    end else begin
        temp_output3_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        temp_output3_0_V_address1 = grp_hwmm_layer4_fu_327_input_0_address1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        temp_output3_0_V_address1 = grp_hw_act_layer3_fu_314_output_0_V_address1;
    end else begin
        temp_output3_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if (((grp_hw_act_layer2_fu_309_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        temp_output3_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        temp_output3_0_V_ce0 = grp_hwmm_layer3_fu_343_output_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        temp_output3_0_V_ce0 = grp_hwmm_layer4_fu_327_input_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        temp_output3_0_V_ce0 = grp_hw_act_layer3_fu_314_output_0_V_ce0;
    end else begin
        temp_output3_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        temp_output3_0_V_ce1 = grp_hwmm_layer4_fu_327_input_0_ce1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        temp_output3_0_V_ce1 = grp_hw_act_layer3_fu_314_output_0_V_ce1;
    end else begin
        temp_output3_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        temp_output3_0_V_d0 = 32'd256;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        temp_output3_0_V_d0 = grp_hwmm_layer3_fu_343_output_0_d0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        temp_output3_0_V_d0 = grp_hw_act_layer3_fu_314_output_0_V_d0;
    end else begin
        temp_output3_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_hw_act_layer2_fu_309_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
        temp_output3_0_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        temp_output3_0_V_we0 = grp_hwmm_layer3_fu_343_output_0_we0;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        temp_output3_0_V_we0 = grp_hw_act_layer3_fu_314_output_0_V_we0;
    end else begin
        temp_output3_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        temp_output3_0_V_we1 = grp_hw_act_layer3_fu_314_output_0_V_we1;
    end else begin
        temp_output3_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        temp_output4_0_V_address0 = zext_ln137_fu_665_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        temp_output4_0_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        temp_output4_0_V_address0 = grp_hwmm_layer4_fu_327_output_0_address0;
    end else begin
        temp_output4_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((grp_hw_act_layer3_fu_314_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18)) | ((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1)))) begin
        temp_output4_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        temp_output4_0_V_ce0 = grp_hwmm_layer4_fu_327_output_0_ce0;
    end else begin
        temp_output4_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0_11001) & (1'b1 == ap_CS_fsm_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1))) begin
        temp_output4_0_V_ce1 = 1'b1;
    end else begin
        temp_output4_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        temp_output4_0_V_d0 = 32'd256;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        temp_output4_0_V_d0 = grp_hwmm_layer4_fu_327_output_0_d0;
    end else begin
        temp_output4_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((grp_hw_act_layer3_fu_314_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
        temp_output4_0_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        temp_output4_0_V_we0 = grp_hwmm_layer4_fu_327_output_0_we0;
    end else begin
        temp_output4_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        temp_output_0_V_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_output_0_V_address0 = grp_hwmm_layer2_fu_335_input_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        temp_output_0_V_address0 = grp_hwmm_layer1_fu_319_output_0_address0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output_0_V_address0 = grp_hw_act_layer1_fu_304_output_0_V_address0;
    end else begin
        temp_output_0_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_output_0_V_address1 = grp_hwmm_layer2_fu_335_input_0_address1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output_0_V_address1 = grp_hw_act_layer1_fu_304_output_0_V_address1;
    end else begin
        temp_output_0_V_address1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        temp_output_0_V_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_output_0_V_ce0 = grp_hwmm_layer2_fu_335_input_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        temp_output_0_V_ce0 = grp_hwmm_layer1_fu_319_output_0_ce0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output_0_V_ce0 = grp_hw_act_layer1_fu_304_output_0_V_ce0;
    end else begin
        temp_output_0_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        temp_output_0_V_ce1 = grp_hwmm_layer2_fu_335_input_0_ce1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output_0_V_ce1 = grp_hw_act_layer1_fu_304_output_0_V_ce1;
    end else begin
        temp_output_0_V_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        temp_output_0_V_d0 = 32'd256;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        temp_output_0_V_d0 = grp_hwmm_layer1_fu_319_output_0_d0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output_0_V_d0 = grp_hw_act_layer1_fu_304_output_0_V_d0;
    end else begin
        temp_output_0_V_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        temp_output_0_V_we0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        temp_output_0_V_we0 = grp_hwmm_layer1_fu_319_output_0_we0;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output_0_V_we0 = grp_hw_act_layer1_fu_304_output_0_V_we0;
    end else begin
        temp_output_0_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        temp_output_0_V_we1 = grp_hw_act_layer1_fu_304_output_0_V_we1;
    end else begin
        temp_output_0_V_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((icmp_ln5_fu_360_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) & ~((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((((icmp_ln5_fu_360_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (ap_enable_reg_pp0_iter1 == 1'b0)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter3 == 1'b1) & (ap_enable_reg_pp0_iter2 == 1'b0)))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            if (((grp_hwmm_layer1_fu_319_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state8))) begin
                ap_NS_fsm = ap_ST_fsm_state9;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            if (((grp_hw_act_layer1_fu_304_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state10))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            if (((grp_hwmm_layer2_fu_335_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state12))) begin
                ap_NS_fsm = ap_ST_fsm_state13;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((grp_hw_act_layer2_fu_309_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((grp_hwmm_layer3_fu_343_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state16))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            if (((grp_hw_act_layer3_fu_314_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state18))) begin
                ap_NS_fsm = ap_ST_fsm_state19;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state18;
            end
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if (((1'b1 == ap_CS_fsm_state20) & (grp_hwmm_layer4_fu_327_ap_done == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln138_fu_642_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln138_fu_642_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state23;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign F2_fu_416_p2 = (12'd1075 - zext_ln455_fu_402_p1);

assign add_ln138_fu_648_p2 = (ap_phi_mux_i_1_phi_fu_272_p4 + 4'd2);

assign add_ln581_fu_451_p2 = ($signed(F2_reg_838) + $signed(12'd4088));

assign add_ln5_fu_354_p2 = (i_reg_257 + 7'd1);

assign and_ln581_fu_555_p2 = (xor_ln582_fu_549_p2 & icmp_ln581_fu_446_p2);

assign and_ln582_fu_538_p2 = (xor_ln571_fu_533_p2 & icmp_ln582_fu_473_p2);

assign and_ln585_fu_567_p2 = (icmp_ln585_fu_561_p2 & and_ln581_fu_555_p2);

assign and_ln603_fu_585_p2 = (xor_ln581_fu_579_p2 & icmp_ln603_fu_492_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state21_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_return = $signed(ret_V_3_fu_779_p3);

assign ashr_ln586_fu_502_p2 = $signed(man_V_2_fu_439_p3) >>> zext_ln586_fu_498_p1;

assign exp_tmp_fu_392_p4 = {{ireg_fu_376_p1[62:52]}};

assign grp_fu_351_p0 = input_img_q0;

assign grp_hw_act_layer1_fu_304_ap_start = grp_hw_act_layer1_fu_304_ap_start_reg;

assign grp_hw_act_layer1_fu_304_grp_fu_880_p_dout0 = grp_fu_880_p2;

assign grp_hw_act_layer2_fu_309_ap_start = grp_hw_act_layer2_fu_309_ap_start_reg;

assign grp_hw_act_layer2_fu_309_grp_fu_880_p_dout0 = grp_fu_880_p2;

assign grp_hw_act_layer3_fu_314_ap_start = grp_hw_act_layer3_fu_314_ap_start_reg;

assign grp_hw_act_layer3_fu_314_grp_fu_880_p_dout0 = grp_fu_880_p2;

assign grp_hwmm_layer1_fu_319_ap_start = grp_hwmm_layer1_fu_319_ap_start_reg;

assign grp_hwmm_layer2_fu_335_ap_start = grp_hwmm_layer2_fu_335_ap_start_reg;

assign grp_hwmm_layer3_fu_343_ap_start = grp_hwmm_layer3_fu_343_ap_start_reg;

assign grp_hwmm_layer4_fu_327_ap_start = grp_hwmm_layer4_fu_327_ap_start_reg;

assign i_cast_fu_366_p1 = i_reg_257;

assign icmp_ln138_fu_642_p2 = ((ap_phi_mux_i_1_phi_fu_272_p4 < 4'd10) ? 1'b1 : 1'b0);

assign icmp_ln1494_1_fu_704_p2 = (($signed(temp_output4_0_V_q0) > $signed(max_val_V_1_fu_676_p3)) ? 1'b1 : 1'b0);

assign icmp_ln1494_fu_670_p2 = (($signed(temp_output4_0_V_q1) > $signed(max_val_V_reg_292)) ? 1'b1 : 1'b0);

assign icmp_ln571_fu_410_p2 = ((trunc_ln555_fu_380_p1 == 63'd0) ? 1'b1 : 1'b0);

assign icmp_ln581_fu_446_p2 = (($signed(F2_reg_838) > $signed(12'd8)) ? 1'b1 : 1'b0);

assign icmp_ln582_fu_473_p2 = ((F2_reg_838 == 12'd8) ? 1'b1 : 1'b0);

assign icmp_ln585_fu_561_p2 = ((sh_amt_fu_461_p3 > 12'd53) ? 1'b1 : 1'b0);

assign icmp_ln5_fu_360_p2 = ((i_reg_257 == 7'd100) ? 1'b1 : 1'b0);

assign icmp_ln603_fu_492_p2 = ((tmp_fu_482_p4 == 7'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_759_p2 = ((trunc_ln851_fu_755_p1 == 8'd0) ? 1'b1 : 1'b0);

assign input_img_address0 = i_cast_fu_366_p1;

assign ireg_fu_376_p1 = grp_fu_351_p1;

assign man_V_1_fu_433_p2 = (54'd0 - zext_ln569_fu_429_p1);

assign man_V_2_fu_439_p3 = ((p_Result_1_reg_820[0:0] == 1'b1) ? man_V_1_fu_433_p2 : zext_ln569_fu_429_p1);

assign max_idx_V_1_fu_696_p3 = ((icmp_ln1494_fu_670_p2[0:0] == 1'b1) ? zext_ln140_fu_692_p1 : max_idx_V_reg_280);

assign max_idx_V_3_fu_729_p3 = ((icmp_ln1494_1_fu_704_p2[0:0] == 1'b1) ? zext_ln140_1_fu_725_p1 : max_idx_V_1_fu_696_p3);

assign max_val_V_1_fu_676_p3 = ((icmp_ln1494_fu_670_p2[0:0] == 1'b1) ? temp_output4_0_V_q1 : max_val_V_reg_292);

assign max_val_V_3_fu_710_p3 = ((icmp_ln1494_1_fu_704_p2[0:0] == 1'b1) ? temp_output4_0_V_q0 : max_val_V_1_fu_676_p3);

assign or_ln138_fu_659_p2 = (ap_phi_mux_i_1_phi_fu_272_p4 | 4'd1);

assign or_ln571_1_fu_627_p2 = (or_ln571_fu_598_p2 | and_ln581_fu_555_p2);

assign or_ln571_fu_598_p2 = (icmp_ln571_reg_830 | and_ln603_fu_585_p2);

assign or_ln581_fu_573_p2 = (or_ln582_fu_544_p2 | icmp_ln581_fu_446_p2);

assign or_ln582_fu_544_p2 = (icmp_ln582_fu_473_p2 | icmp_ln571_reg_830);

assign p_Result_2_fu_422_p3 = {{1'd1}, {trunc_ln565_reg_825}};

assign p_Result_s_fu_747_p3 = max_idx_V_reg_280[32'd31];

assign ret_V_1_fu_765_p2 = (ret_V_fu_737_p4 + 24'd1);

assign ret_V_3_fu_779_p3 = ((p_Result_s_fu_747_p3[0:0] == 1'b1) ? select_ln850_fu_771_p3 : ret_V_fu_737_p4);

assign ret_V_fu_737_p4 = {{max_idx_V_reg_280[31:8]}};

assign select_ln571_1_fu_603_p3 = ((and_ln585_fu_567_p2[0:0] == 1'b1) ? select_ln588_fu_519_p3 : trunc_ln586_fu_508_p1);

assign select_ln571_2_fu_611_p3 = ((and_ln582_fu_538_p2[0:0] == 1'b1) ? trunc_ln583_fu_478_p1 : 32'd0);

assign select_ln571_3_fu_619_p3 = ((or_ln571_fu_598_p2[0:0] == 1'b1) ? select_ln571_fu_591_p3 : select_ln571_1_fu_603_p3);

assign select_ln571_4_fu_633_p3 = ((or_ln571_1_fu_627_p2[0:0] == 1'b1) ? select_ln571_3_fu_619_p3 : select_ln571_2_fu_611_p3);

assign select_ln571_fu_591_p3 = ((icmp_ln571_reg_830[0:0] == 1'b1) ? 32'd0 : shl_ln604_fu_527_p2);

assign select_ln588_fu_519_p3 = ((tmp_1_fu_512_p3[0:0] == 1'b1) ? 32'd4294967295 : 32'd0);

assign select_ln850_fu_771_p3 = ((icmp_ln851_fu_759_p2[0:0] == 1'b1) ? ret_V_fu_737_p4 : ret_V_1_fu_765_p2);

assign sext_ln581_fu_469_p1 = sh_amt_fu_461_p3;

assign sh_amt_fu_461_p3 = ((icmp_ln581_fu_446_p2[0:0] == 1'b1) ? add_ln581_fu_451_p2 : sub_ln581_fu_456_p2);

assign shl_ln140_1_fu_718_p3 = {{or_ln138_reg_860}, {8'd0}};

assign shl_ln604_fu_527_p2 = trunc_ln583_fu_478_p1 << sext_ln581_fu_469_p1;

assign shl_ln_fu_684_p3 = {{i_1_reg_268}, {8'd0}};

assign sub_ln581_fu_456_p2 = (12'd8 - F2_reg_838);

assign temp_output4_0_V_address1 = trunc_ln731_1_cast_fu_654_p1;

assign tmp_1_fu_512_p3 = input_img_load_reg_810_pp0_iter2_reg[32'd31];

assign tmp_fu_482_p4 = {{sh_amt_fu_461_p3[11:5]}};

assign trunc_ln555_fu_380_p1 = ireg_fu_376_p1[62:0];

assign trunc_ln565_fu_406_p1 = ireg_fu_376_p1[51:0];

assign trunc_ln583_fu_478_p1 = man_V_2_fu_439_p3[31:0];

assign trunc_ln586_fu_508_p1 = ashr_ln586_fu_502_p2[31:0];

assign trunc_ln731_1_cast_fu_654_p1 = ap_phi_mux_i_1_phi_fu_272_p4;

assign trunc_ln851_fu_755_p1 = max_idx_V_reg_280[7:0];

assign xor_ln571_fu_533_p2 = (icmp_ln571_reg_830 ^ 1'd1);

assign xor_ln581_fu_579_p2 = (or_ln581_fu_573_p2 ^ 1'd1);

assign xor_ln582_fu_549_p2 = (or_ln582_fu_544_p2 ^ 1'd1);

assign zext_ln137_fu_665_p1 = or_ln138_fu_659_p2;

assign zext_ln140_1_fu_725_p1 = shl_ln140_1_fu_718_p3;

assign zext_ln140_fu_692_p1 = shl_ln_fu_684_p3;

assign zext_ln455_fu_402_p1 = exp_tmp_fu_392_p4;

assign zext_ln569_fu_429_p1 = p_Result_2_fu_422_p3;

assign zext_ln586_fu_498_p1 = $unsigned(sext_ln581_fu_469_p1);

always @ (posedge ap_clk) begin
    i_cast_reg_800[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    i_cast_reg_800_pp0_iter1_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    i_cast_reg_800_pp0_iter2_reg[63:7] <= 57'b000000000000000000000000000000000000000000000000000000000;
    or_ln138_reg_860[0] <= 1'b1;
end

endmodule //nn_inference
