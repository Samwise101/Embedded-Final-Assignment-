

================================================================
== Vitis HLS Report for 'hw_act_layer2'
================================================================
* Date:           Mon Nov 18 06:18:32 2024

* Version:        2020.2 (Build 3064766 on Wed Nov 18 09:12:47 MST 2020)
* Project:        nn
* Solution:       solution1 (Vivado IP Flow Target)
* Product family: zynquplus
* Target device:  xczu3eg-sbva484-1-e


================================================================
== Performance Estimates
================================================================
+ Timing: 
    * Summary: 
    +--------+----------+----------+------------+
    |  Clock |  Target  | Estimated| Uncertainty|
    +--------+----------+----------+------------+
    |ap_clk  |  10.00 ns|  7.271 ns|     2.70 ns|
    +--------+----------+----------+------------+

+ Latency: 
    * Summary: 
    +---------+---------+----------+----------+-----+-----+---------+
    |  Latency (cycles) |  Latency (absolute) |  Interval | Pipeline|
    |   min   |   max   |    min   |    max   | min | max |   Type  |
    +---------+---------+----------+----------+-----+-----+---------+
    |       37|       37|  0.370 us|  0.370 us|   37|   37|     none|
    +---------+---------+----------+----------+-----+-----+---------+

    + Detail: 
        * Instance: 
        N/A

        * Loop: 
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |          |  Latency (cycles) | Iteration|  Initiation Interval  | Trip |          |
        | Loop Name|   min   |   max   |  Latency |  achieved |   target  | Count| Pipelined|
        +----------+---------+---------+----------+-----------+-----------+------+----------+
        |- loop1   |       35|       35|         6|          2|          1|    16|       yes|
        +----------+---------+---------+----------+-----------+-----------+------+----------+

============================================================
+ Verbose Summary: Synthesis Manager
============================================================
InlineROM: 1
ExposeGlobal: 0
============================================================
+ Verbose Summary: CDFG Model
============================================================
IsTopModel: 0
ResetActiveHigh: 1
IsCombinational: 0
IsDatapathOnly: 0
HasWiredReturn: 1
HasMFsm: 0
HasVarLatency: 1
IsPipeline: 0
IsRtlPipelined: 0
IsInstanceOverlapped: 0
IsDontTouch: 0
HasImplIP: 0
IsGatedGlobalClock: 0

+ Individual pipeline summary: 
  * Pipeline-0: initiation interval (II) = 2, depth = 6


============================================================
+ Verbose Summary: Schedule
============================================================
* Number of FSM states : 8
* Pipeline : 1
  Pipeline-0 : II = 2, D = 6, States = { 2 3 4 5 6 7 }
* Dataflow Pipeline: 0

* FSM state transitions: 
1 --> 2 
2 --> 8 3 
3 --> 4 
4 --> 5 
5 --> 6 
6 --> 7 
7 --> 2 
8 --> 

* FSM state operations: 

State 1 <SV = 0> <Delay = 0.48>
ST_1 : Operation 9 [1/1] (0.48ns)   --->   "%br_ln108 = br void" [nn.cpp:108]   --->   Operation 9 'br' 'br_ln108' <Predicate = true> <Delay = 0.48>

State 2 <SV = 1> <Delay = 1.35>
ST_2 : Operation 10 [1/1] (0.00ns)   --->   "%i = phi i6 %add_ln108, void %.split_ifconv, i6 0, void" [nn.cpp:108]   --->   Operation 10 'phi' 'i' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 11 [1/1] (0.00ns)   --->   "%specpipeline_ln0 = specpipeline void @_ssdm_op_SpecPipeline, i32 4294967295, i32 0, i32 1, i32 0, void @p_str"   --->   Operation 11 'specpipeline' 'specpipeline_ln0' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 12 [1/1] (0.00ns)   --->   "%tmp_32 = bitselect i1 @_ssdm_op_BitSelect.i1.i6.i32, i6 %i, i32 5" [nn.cpp:108]   --->   Operation 12 'bitselect' 'tmp_32' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 13 [1/1] (0.00ns)   --->   "%empty = speclooptripcount i32 @_ssdm_op_SpecLoopTripCount, i64 16, i64 16, i64 16"   --->   Operation 13 'speclooptripcount' 'empty' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 14 [1/1] (0.00ns)   --->   "%br_ln108 = br i1 %tmp_32, void %.split_ifconv, void" [nn.cpp:108]   --->   Operation 14 'br' 'br_ln108' <Predicate = true> <Delay = 0.00>
ST_2 : Operation 15 [1/1] (0.00ns)   --->   "%i_cast29 = zext i6 %i" [nn.cpp:108]   --->   Operation 15 'zext' 'i_cast29' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_2 : Operation 16 [1/1] (0.00ns)   --->   "%empty_55 = trunc i6 %i" [nn.cpp:108]   --->   Operation 16 'trunc' 'empty_55' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_2 : Operation 17 [1/1] (0.00ns)   --->   "%output_0_V_addr = getelementptr i32 %output_0_V, i64 0, i64 %i_cast29"   --->   Operation 17 'getelementptr' 'output_0_V_addr' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_2 : Operation 18 [2/2] (1.35ns)   --->   "%p_Val2_s = load i5 %output_0_V_addr"   --->   Operation 18 'load' 'p_Val2_s' <Predicate = (!tmp_32)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_2 : Operation 19 [1/1] (0.00ns)   --->   "%or_ln108 = or i5 %empty_55, i5 1" [nn.cpp:108]   --->   Operation 19 'or' 'or_ln108' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_2 : Operation 20 [1/1] (0.00ns)   --->   "%zext_ln885 = zext i5 %or_ln108"   --->   Operation 20 'zext' 'zext_ln885' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_2 : Operation 21 [1/1] (0.00ns)   --->   "%output_0_V_addr_2 = getelementptr i32 %output_0_V, i64 0, i64 %zext_ln885"   --->   Operation 21 'getelementptr' 'output_0_V_addr_2' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_2 : Operation 22 [2/2] (1.35ns)   --->   "%p_Val2_9 = load i5 %output_0_V_addr_2"   --->   Operation 22 'load' 'p_Val2_9' <Predicate = (!tmp_32)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>

State 3 <SV = 2> <Delay = 7.27>
ST_3 : Operation 23 [1/1] (0.88ns)   --->   "%add_ln108 = add i6 %i, i6 2" [nn.cpp:108]   --->   Operation 23 'add' 'add_ln108' <Predicate = (!tmp_32)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 24 [1/2] (1.35ns)   --->   "%p_Val2_s = load i5 %output_0_V_addr"   --->   Operation 24 'load' 'p_Val2_s' <Predicate = (!tmp_32)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_3 : Operation 25 [1/1] (0.00ns)   --->   "%p_Result_23 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %p_Val2_s, i32 31"   --->   Operation 25 'bitselect' 'p_Result_23' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_3 : Operation 26 [1/1] (1.20ns)   --->   "%tmp_V = sub i32 0, i32 %p_Val2_s"   --->   Operation 26 'sub' 'tmp_V' <Predicate = (!tmp_32)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 27 [1/1] (0.52ns)   --->   "%tmp_V_9 = select i1 %p_Result_23, i32 %tmp_V, i32 %p_Val2_s"   --->   Operation 27 'select' 'tmp_V_9' <Predicate = (!tmp_32)> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 28 [1/1] (0.00ns)   --->   "%p_Result_24 = partselect i32 @_ssdm_op_PartSelect.i32.i32.i32.i32, i32 %tmp_V_9, i32 31, i32 0"   --->   Operation 28 'partselect' 'p_Result_24' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_3 : Operation 29 [1/1] (0.00ns)   --->   "%l = cttz i32 @llvm.cttz.i32, i32 %p_Result_24, i1 1"   --->   Operation 29 'cttz' 'l' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_3 : Operation 30 [1/1] (1.20ns)   --->   "%sub_ln894 = sub i32 32, i32 %l"   --->   Operation 30 'sub' 'sub_ln894' <Predicate = (!tmp_32)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 31 [1/1] (1.20ns)   --->   "%lsb_index = add i32 %sub_ln894, i32 4294967243"   --->   Operation 31 'add' 'lsb_index' <Predicate = (!tmp_32)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 32 [1/1] (0.00ns)   --->   "%tmp_34 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %lsb_index, i32 1, i32 31"   --->   Operation 32 'partselect' 'tmp_34' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_3 : Operation 33 [1/1] (1.09ns)   --->   "%icmp_ln896 = icmp_sgt  i31 %tmp_34, i31 0"   --->   Operation 33 'icmp' 'icmp_ln896' <Predicate = (!tmp_32)> <Delay = 1.09> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 34 [1/1] (0.00ns)   --->   "%trunc_ln897 = trunc i32 %sub_ln894"   --->   Operation 34 'trunc' 'trunc_ln897' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_3 : Operation 35 [1/1] (0.88ns)   --->   "%sub_ln897 = sub i6 22, i6 %trunc_ln897"   --->   Operation 35 'sub' 'sub_ln897' <Predicate = (!tmp_32)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 36 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln899)   --->   "%zext_ln897 = zext i6 %sub_ln897"   --->   Operation 36 'zext' 'zext_ln897' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_3 : Operation 37 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln899)   --->   "%lshr_ln897 = lshr i32 4294967295, i32 %zext_ln897"   --->   Operation 37 'lshr' 'lshr_ln897' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.45> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 38 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln899)   --->   "%shl_ln899 = shl i32 1, i32 %lsb_index"   --->   Operation 38 'shl' 'shl_ln899' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.45> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 39 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln899)   --->   "%or_ln899_3 = or i32 %lshr_ln897, i32 %shl_ln899"   --->   Operation 39 'or' 'or_ln899_3' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 40 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln899)   --->   "%and_ln899 = and i32 %tmp_V_9, i32 %or_ln899_3"   --->   Operation 40 'and' 'and_ln899' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 41 [1/1] (1.45ns) (out node of the LUT)   --->   "%icmp_ln899 = icmp_ne  i32 %and_ln899, i32 0"   --->   Operation 41 'icmp' 'icmp_ln899' <Predicate = (!tmp_32)> <Delay = 1.45> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 42 [1/1] (0.00ns) (grouped into LUT with out node select_ln908)   --->   "%tmp_35 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %lsb_index, i32 31"   --->   Operation 42 'bitselect' 'tmp_35' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_3 : Operation 43 [1/1] (0.00ns) (grouped into LUT with out node select_ln908)   --->   "%xor_ln899 = xor i1 %tmp_35, i1 1"   --->   Operation 43 'xor' 'xor_ln899' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 44 [1/1] (0.00ns)   --->   "%p_Result_25 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %tmp_V_9, i32 %lsb_index"   --->   Operation 44 'bitselect' 'p_Result_25' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_3 : Operation 45 [1/1] (1.11ns)   --->   "%icmp_ln908 = icmp_sgt  i32 %lsb_index, i32 0"   --->   Operation 45 'icmp' 'icmp_ln908' <Predicate = (!tmp_32)> <Delay = 1.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 46 [1/1] (0.00ns) (grouped into LUT with out node select_ln908)   --->   "%select_ln896 = select i1 %icmp_ln896, i1 %icmp_ln899, i1 %p_Result_25"   --->   Operation 46 'select' 'select_ln896' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 47 [1/1] (1.20ns)   --->   "%add_ln908 = add i32 %sub_ln894, i32 4294967242"   --->   Operation 47 'add' 'add_ln908' <Predicate = (!tmp_32)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 48 [1/1] (0.00ns) (grouped into LUT with out node select_ln908)   --->   "%and_ln899_4 = and i1 %p_Result_25, i1 %xor_ln899"   --->   Operation 48 'and' 'and_ln899_4' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 49 [1/1] (1.20ns)   --->   "%sub_ln909 = sub i32 54, i32 %sub_ln894"   --->   Operation 49 'sub' 'sub_ln909' <Predicate = (!tmp_32)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 50 [1/1] (0.33ns) (out node of the LUT)   --->   "%select_ln908 = select i1 %icmp_ln908, i1 %select_ln896, i1 %and_ln899_4"   --->   Operation 50 'select' 'select_ln908' <Predicate = (!tmp_32)> <Delay = 0.33> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 51 [1/1] (0.00ns)   --->   "%trunc_ln893 = trunc i32 %l"   --->   Operation 51 'trunc' 'trunc_ln893' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_3 : Operation 52 [1/2] (1.35ns)   --->   "%p_Val2_9 = load i5 %output_0_V_addr_2"   --->   Operation 52 'load' 'p_Val2_9' <Predicate = (!tmp_32)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_3 : Operation 53 [1/1] (0.00ns)   --->   "%p_Result_27 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %p_Val2_9, i32 31"   --->   Operation 53 'bitselect' 'p_Result_27' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_3 : Operation 54 [1/1] (1.20ns)   --->   "%tmp_V_7 = sub i32 0, i32 %p_Val2_9"   --->   Operation 54 'sub' 'tmp_V_7' <Predicate = (!tmp_32)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 55 [1/1] (0.52ns)   --->   "%tmp_V_10 = select i1 %p_Result_27, i32 %tmp_V_7, i32 %p_Val2_9"   --->   Operation 55 'select' 'tmp_V_10' <Predicate = (!tmp_32)> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 56 [1/1] (0.00ns)   --->   "%p_Result_28 = partselect i32 @_ssdm_op_PartSelect.i32.i32.i32.i32, i32 %tmp_V_10, i32 31, i32 0"   --->   Operation 56 'partselect' 'p_Result_28' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_3 : Operation 57 [1/1] (0.00ns)   --->   "%l_2 = cttz i32 @llvm.cttz.i32, i32 %p_Result_28, i1 1"   --->   Operation 57 'cttz' 'l_2' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_3 : Operation 58 [1/1] (1.20ns)   --->   "%sub_ln894_2 = sub i32 32, i32 %l_2"   --->   Operation 58 'sub' 'sub_ln894_2' <Predicate = (!tmp_32)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 59 [1/1] (1.20ns)   --->   "%lsb_index_2 = add i32 %sub_ln894_2, i32 4294967243"   --->   Operation 59 'add' 'lsb_index_2' <Predicate = (!tmp_32)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 60 [1/1] (0.00ns)   --->   "%tmp_38 = partselect i31 @_ssdm_op_PartSelect.i31.i32.i32.i32, i32 %lsb_index_2, i32 1, i32 31"   --->   Operation 60 'partselect' 'tmp_38' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_3 : Operation 61 [1/1] (1.09ns)   --->   "%icmp_ln896_2 = icmp_sgt  i31 %tmp_38, i31 0"   --->   Operation 61 'icmp' 'icmp_ln896_2' <Predicate = (!tmp_32)> <Delay = 1.09> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 62 [1/1] (0.00ns)   --->   "%trunc_ln897_2 = trunc i32 %sub_ln894_2"   --->   Operation 62 'trunc' 'trunc_ln897_2' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_3 : Operation 63 [1/1] (0.88ns)   --->   "%sub_ln897_2 = sub i6 22, i6 %trunc_ln897_2"   --->   Operation 63 'sub' 'sub_ln897_2' <Predicate = (!tmp_32)> <Delay = 0.88> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 64 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln899_2)   --->   "%zext_ln897_2 = zext i6 %sub_ln897_2"   --->   Operation 64 'zext' 'zext_ln897_2' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_3 : Operation 65 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln899_2)   --->   "%lshr_ln897_2 = lshr i32 4294967295, i32 %zext_ln897_2"   --->   Operation 65 'lshr' 'lshr_ln897_2' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.45> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 66 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln899_2)   --->   "%shl_ln899_2 = shl i32 1, i32 %lsb_index_2"   --->   Operation 66 'shl' 'shl_ln899_2' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.45> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 67 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln899_2)   --->   "%or_ln899 = or i32 %lshr_ln897_2, i32 %shl_ln899_2"   --->   Operation 67 'or' 'or_ln899' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 68 [1/1] (0.00ns) (grouped into LUT with out node icmp_ln899_2)   --->   "%and_ln899_6 = and i32 %tmp_V_10, i32 %or_ln899"   --->   Operation 68 'and' 'and_ln899_6' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 69 [1/1] (1.45ns) (out node of the LUT)   --->   "%icmp_ln899_2 = icmp_ne  i32 %and_ln899_6, i32 0"   --->   Operation 69 'icmp' 'icmp_ln899_2' <Predicate = (!tmp_32)> <Delay = 1.45> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 70 [1/1] (0.00ns) (grouped into LUT with out node select_ln908_5)   --->   "%tmp_39 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %lsb_index_2, i32 31"   --->   Operation 70 'bitselect' 'tmp_39' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_3 : Operation 71 [1/1] (0.00ns) (grouped into LUT with out node select_ln908_5)   --->   "%xor_ln899_2 = xor i1 %tmp_39, i1 1"   --->   Operation 71 'xor' 'xor_ln899_2' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 72 [1/1] (0.00ns)   --->   "%p_Result_29 = bitselect i1 @_ssdm_op_BitSelect.i1.i32.i32, i32 %tmp_V_10, i32 %lsb_index_2"   --->   Operation 72 'bitselect' 'p_Result_29' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_3 : Operation 73 [1/1] (1.11ns)   --->   "%icmp_ln908_2 = icmp_sgt  i32 %lsb_index_2, i32 0"   --->   Operation 73 'icmp' 'icmp_ln908_2' <Predicate = (!tmp_32)> <Delay = 1.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 74 [1/1] (0.00ns) (grouped into LUT with out node select_ln908_5)   --->   "%select_ln896_2 = select i1 %icmp_ln896_2, i1 %icmp_ln899_2, i1 %p_Result_29"   --->   Operation 74 'select' 'select_ln896_2' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 75 [1/1] (0.00ns) (grouped into LUT with out node select_ln908_5)   --->   "%and_ln899_5 = and i1 %p_Result_29, i1 %xor_ln899_2"   --->   Operation 75 'and' 'and_ln899_5' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_3 : Operation 76 [1/1] (0.33ns) (out node of the LUT)   --->   "%select_ln908_5 = select i1 %icmp_ln908_2, i1 %select_ln896_2, i1 %and_ln899_5"   --->   Operation 76 'select' 'select_ln908_5' <Predicate = (!tmp_32)> <Delay = 0.33> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_3 : Operation 77 [1/1] (0.00ns)   --->   "%trunc_ln893_2 = trunc i32 %l_2"   --->   Operation 77 'trunc' 'trunc_ln893_2' <Predicate = (!tmp_32)> <Delay = 0.00>

State 4 <SV = 3> <Delay = 6.60>
ST_4 : Operation 78 [1/1] (0.00ns)   --->   "%zext_ln907 = zext i32 %tmp_V_9"   --->   Operation 78 'zext' 'zext_ln907' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_4 : Operation 79 [1/1] (0.00ns) (grouped into LUT with out node m_11)   --->   "%zext_ln908 = zext i32 %add_ln908"   --->   Operation 79 'zext' 'zext_ln908' <Predicate = (!tmp_32 & icmp_ln908)> <Delay = 0.00>
ST_4 : Operation 80 [1/1] (0.00ns) (grouped into LUT with out node m_11)   --->   "%lshr_ln908 = lshr i64 %zext_ln907, i64 %zext_ln908"   --->   Operation 80 'lshr' 'lshr_ln908' <Predicate = (!tmp_32 & icmp_ln908)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.45> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 81 [1/1] (0.00ns) (grouped into LUT with out node m_11)   --->   "%zext_ln909 = zext i32 %sub_ln909"   --->   Operation 81 'zext' 'zext_ln909' <Predicate = (!tmp_32 & !icmp_ln908)> <Delay = 0.00>
ST_4 : Operation 82 [1/1] (0.00ns) (grouped into LUT with out node m_11)   --->   "%shl_ln909 = shl i64 %zext_ln907, i64 %zext_ln909"   --->   Operation 82 'shl' 'shl_ln909' <Predicate = (!tmp_32 & !icmp_ln908)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.45> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 83 [1/1] (0.00ns) (grouped into LUT with out node m_11)   --->   "%m_10 = select i1 %icmp_ln908, i64 %lshr_ln908, i64 %shl_ln909"   --->   Operation 83 'select' 'm_10' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 84 [1/1] (0.00ns) (grouped into LUT with out node m_11)   --->   "%zext_ln911 = zext i1 %select_ln908"   --->   Operation 84 'zext' 'zext_ln911' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_4 : Operation 85 [1/1] (1.47ns) (out node of the LUT)   --->   "%m_11 = add i64 %m_10, i64 %zext_ln911"   --->   Operation 85 'add' 'm_11' <Predicate = (!tmp_32)> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 86 [1/1] (0.00ns)   --->   "%m_16 = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %m_11, i32 1, i32 63"   --->   Operation 86 'partselect' 'm_16' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_4 : Operation 87 [1/1] (0.00ns)   --->   "%zext_ln912 = zext i63 %m_16"   --->   Operation 87 'zext' 'zext_ln912' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_4 : Operation 88 [1/1] (0.00ns)   --->   "%p_Result_s = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %m_11, i32 54"   --->   Operation 88 'bitselect' 'p_Result_s' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_4 : Operation 89 [1/1] (0.45ns)   --->   "%select_ln893 = select i1 %p_Result_s, i11 1023, i11 1022"   --->   Operation 89 'select' 'select_ln893' <Predicate = (!tmp_32)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 90 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln915 = sub i11 24, i11 %trunc_ln893"   --->   Operation 90 'sub' 'sub_ln915' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 91 [1/1] (1.07ns) (root node of TernaryAdder)   --->   "%add_ln915 = add i11 %sub_ln915, i11 %select_ln893"   --->   Operation 91 'add' 'add_ln915' <Predicate = (!tmp_32)> <Delay = 1.07> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 92 [1/1] (0.00ns)   --->   "%tmp = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i1.i11, i1 %p_Result_23, i11 %add_ln915"   --->   Operation 92 'bitconcatenate' 'tmp' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_4 : Operation 93 [1/1] (0.00ns)   --->   "%p_Result_26 = partset i64 @_ssdm_op_PartSet.i64.i64.i12.i32.i32, i64 %zext_ln912, i12 %tmp, i32 52, i32 63"   --->   Operation 93 'partset' 'p_Result_26' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_4 : Operation 94 [1/1] (0.00ns)   --->   "%bitcast_ln734 = bitcast i64 %p_Result_26"   --->   Operation 94 'bitcast' 'bitcast_ln734' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_4 : Operation 95 [1/1] (0.00ns)   --->   "%trunc_ln7 = partselect i52 @_ssdm_op_PartSelect.i52.i64.i32.i32, i64 %m_11, i32 1, i32 52"   --->   Operation 95 'partselect' 'trunc_ln7' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_4 : Operation 96 [1/1] (0.85ns)   --->   "%icmp_ln1506 = icmp_ne  i11 %add_ln915, i11 2047"   --->   Operation 96 'icmp' 'icmp_ln1506' <Predicate = (!tmp_32)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 97 [1/1] (1.34ns)   --->   "%icmp_ln1506_4 = icmp_eq  i52 %trunc_ln7, i52 0"   --->   Operation 97 'icmp' 'icmp_ln1506_4' <Predicate = (!tmp_32)> <Delay = 1.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 98 [2/2] (3.61ns)   --->   "%tmp_4 = fcmp_olt  i64 %bitcast_ln734, i64 0"   --->   Operation 98 'dcmp' 'tmp_4' <Predicate = (!tmp_32)> <Delay = 3.61> <CoreInst = "DCompare">   --->   Core 38 'DCompare' <Latency = 1> <II = 1> <Delay = 3.61> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 99 [1/1] (0.00ns)   --->   "%zext_ln907_2 = zext i32 %tmp_V_10"   --->   Operation 99 'zext' 'zext_ln907_2' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_4 : Operation 100 [1/1] (1.20ns)   --->   "%add_ln908_2 = add i32 %sub_ln894_2, i32 4294967242"   --->   Operation 100 'add' 'add_ln908_2' <Predicate = (!tmp_32 & icmp_ln908_2)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 101 [1/1] (0.00ns) (grouped into LUT with out node m_13)   --->   "%zext_ln908_2 = zext i32 %add_ln908_2"   --->   Operation 101 'zext' 'zext_ln908_2' <Predicate = (!tmp_32 & icmp_ln908_2)> <Delay = 0.00>
ST_4 : Operation 102 [1/1] (0.00ns) (grouped into LUT with out node m_13)   --->   "%lshr_ln908_2 = lshr i64 %zext_ln907_2, i64 %zext_ln908_2"   --->   Operation 102 'lshr' 'lshr_ln908_2' <Predicate = (!tmp_32 & icmp_ln908_2)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.45> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 103 [1/1] (1.20ns)   --->   "%sub_ln909_2 = sub i32 54, i32 %sub_ln894_2"   --->   Operation 103 'sub' 'sub_ln909_2' <Predicate = (!tmp_32 & !icmp_ln908_2)> <Delay = 1.20> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 104 [1/1] (0.00ns) (grouped into LUT with out node m_13)   --->   "%zext_ln909_2 = zext i32 %sub_ln909_2"   --->   Operation 104 'zext' 'zext_ln909_2' <Predicate = (!tmp_32 & !icmp_ln908_2)> <Delay = 0.00>
ST_4 : Operation 105 [1/1] (0.00ns) (grouped into LUT with out node m_13)   --->   "%shl_ln909_2 = shl i64 %zext_ln907_2, i64 %zext_ln909_2"   --->   Operation 105 'shl' 'shl_ln909_2' <Predicate = (!tmp_32 & !icmp_ln908_2)> <Delay = 0.00> <CoreInst = "Shifter">   --->   Core 75 'Shifter' <Latency = 0> <II = 1> <Delay = 1.45> <FuncUnit> <Opcode : 'shl' 'lshr' 'ashr'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 106 [1/1] (0.00ns) (grouped into LUT with out node m_13)   --->   "%m_12 = select i1 %icmp_ln908_2, i64 %lshr_ln908_2, i64 %shl_ln909_2"   --->   Operation 106 'select' 'm_12' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 107 [1/1] (0.00ns) (grouped into LUT with out node m_13)   --->   "%zext_ln911_2 = zext i1 %select_ln908_5"   --->   Operation 107 'zext' 'zext_ln911_2' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_4 : Operation 108 [1/1] (1.47ns) (out node of the LUT)   --->   "%m_13 = add i64 %m_12, i64 %zext_ln911_2"   --->   Operation 108 'add' 'm_13' <Predicate = (!tmp_32)> <Delay = 1.47> <CoreInst = "Adder">   --->   Core 1 'Adder' <Latency = 0> <II = 1> <Delay = 1.47> <FuncUnit> <Opcode : 'add' 'sub'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 109 [1/1] (0.00ns)   --->   "%m = partselect i63 @_ssdm_op_PartSelect.i63.i64.i32.i32, i64 %m_13, i32 1, i32 63"   --->   Operation 109 'partselect' 'm' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_4 : Operation 110 [1/1] (0.00ns)   --->   "%zext_ln912_2 = zext i63 %m"   --->   Operation 110 'zext' 'zext_ln912_2' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_4 : Operation 111 [1/1] (0.00ns)   --->   "%p_Result_21 = bitselect i1 @_ssdm_op_BitSelect.i1.i64.i32, i64 %m_13, i32 54"   --->   Operation 111 'bitselect' 'p_Result_21' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_4 : Operation 112 [1/1] (0.45ns)   --->   "%select_ln893_2 = select i1 %p_Result_21, i11 1023, i11 1022"   --->   Operation 112 'select' 'select_ln893_2' <Predicate = (!tmp_32)> <Delay = 0.45> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_4 : Operation 113 [1/1] (0.00ns) (grouped into TernaryAdder)   --->   "%sub_ln915_2 = sub i11 24, i11 %trunc_ln893_2"   --->   Operation 113 'sub' 'sub_ln915_2' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 114 [1/1] (1.07ns) (root node of TernaryAdder)   --->   "%add_ln915_2 = add i11 %sub_ln915_2, i11 %select_ln893_2"   --->   Operation 114 'add' 'add_ln915_2' <Predicate = (!tmp_32)> <Delay = 1.07> <CoreInst = "TAddSub">   --->   Core 10 'TAddSub' <Latency = 0> <II = 1> <Delay = 0.53> <IPBlock> <Opcode : 'add' 'sub'> <InPorts = 3> <OutPorts = 1> <Sync>
ST_4 : Operation 115 [1/1] (0.00ns)   --->   "%tmp_2 = bitconcatenate i12 @_ssdm_op_BitConcatenate.i12.i1.i11, i1 %p_Result_27, i11 %add_ln915_2"   --->   Operation 115 'bitconcatenate' 'tmp_2' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_4 : Operation 116 [1/1] (0.00ns)   --->   "%p_Result_30 = partset i64 @_ssdm_op_PartSet.i64.i64.i12.i32.i32, i64 %zext_ln912_2, i12 %tmp_2, i32 52, i32 63"   --->   Operation 116 'partset' 'p_Result_30' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_4 : Operation 117 [1/1] (0.00ns)   --->   "%trunc_ln1506_2 = partselect i52 @_ssdm_op_PartSelect.i52.i64.i32.i32, i64 %m_13, i32 1, i32 52"   --->   Operation 117 'partselect' 'trunc_ln1506_2' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_4 : Operation 118 [1/1] (0.85ns)   --->   "%icmp_ln1506_5 = icmp_ne  i11 %add_ln915_2, i11 2047"   --->   Operation 118 'icmp' 'icmp_ln1506_5' <Predicate = (!tmp_32)> <Delay = 0.85> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_4 : Operation 119 [1/1] (1.34ns)   --->   "%icmp_ln1506_6 = icmp_eq  i52 %trunc_ln1506_2, i52 0"   --->   Operation 119 'icmp' 'icmp_ln1506_6' <Predicate = (!tmp_32)> <Delay = 1.34> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>

State 5 <SV = 4> <Delay = 5.49>
ST_5 : Operation 120 [1/1] (0.00ns) (grouped into LUT with out node select_ln1506)   --->   "%or_ln1506 = or i1 %icmp_ln1506_4, i1 %icmp_ln1506"   --->   Operation 120 'or' 'or_ln1506' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 121 [1/2] (3.61ns)   --->   "%tmp_4 = fcmp_olt  i64 %bitcast_ln734, i64 0"   --->   Operation 121 'dcmp' 'tmp_4' <Predicate = (!tmp_32)> <Delay = 3.61> <CoreInst = "DCompare">   --->   Core 38 'DCompare' <Latency = 1> <II = 1> <Delay = 3.61> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 122 [1/1] (0.00ns) (grouped into LUT with out node select_ln1506)   --->   "%and_ln1506 = and i1 %or_ln1506, i1 %tmp_4"   --->   Operation 122 'and' 'and_ln1506' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 123 [1/1] (1.11ns)   --->   "%icmp_ln885 = icmp_ne  i32 %p_Val2_s, i32 0"   --->   Operation 123 'icmp' 'icmp_ln885' <Predicate = (!tmp_32)> <Delay = 1.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 124 [1/1] (0.00ns) (grouped into LUT with out node select_ln1506)   --->   "%and_ln1506_4 = and i1 %icmp_ln885, i1 %and_ln1506"   --->   Operation 124 'and' 'and_ln1506_4' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_5 : Operation 125 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln1506 = select i1 %and_ln1506_4, i32 0, i32 %p_Val2_s"   --->   Operation 125 'select' 'select_ln1506' <Predicate = (!tmp_32)> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>
ST_5 : Operation 126 [1/1] (1.35ns)   --->   "%store_ln111 = store i32 %select_ln1506, i5 %output_0_V_addr" [nn.cpp:111]   --->   Operation 126 'store' 'store_ln111' <Predicate = (!tmp_32)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_5 : Operation 127 [1/1] (0.00ns)   --->   "%bitcast_ln734_2 = bitcast i64 %p_Result_30"   --->   Operation 127 'bitcast' 'bitcast_ln734_2' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_5 : Operation 128 [2/2] (3.61ns)   --->   "%tmp_5 = fcmp_olt  i64 %bitcast_ln734_2, i64 0"   --->   Operation 128 'dcmp' 'tmp_5' <Predicate = (!tmp_32)> <Delay = 3.61> <CoreInst = "DCompare">   --->   Core 38 'DCompare' <Latency = 1> <II = 1> <Delay = 3.61> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>

State 6 <SV = 5> <Delay = 4.13>
ST_6 : Operation 129 [1/1] (0.00ns) (grouped into LUT with out node select_ln1506_2)   --->   "%or_ln1506_2 = or i1 %icmp_ln1506_6, i1 %icmp_ln1506_5"   --->   Operation 129 'or' 'or_ln1506_2' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 130 [1/2] (3.61ns)   --->   "%tmp_5 = fcmp_olt  i64 %bitcast_ln734_2, i64 0"   --->   Operation 130 'dcmp' 'tmp_5' <Predicate = (!tmp_32)> <Delay = 3.61> <CoreInst = "DCompare">   --->   Core 38 'DCompare' <Latency = 1> <II = 1> <Delay = 3.61> <FuncUnit> <Opcode : 'dcmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 131 [1/1] (0.00ns) (grouped into LUT with out node select_ln1506_2)   --->   "%and_ln1506_5 = and i1 %or_ln1506_2, i1 %tmp_5"   --->   Operation 131 'and' 'and_ln1506_5' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 132 [1/1] (1.11ns)   --->   "%icmp_ln885_2 = icmp_ne  i32 %p_Val2_9, i32 0"   --->   Operation 132 'icmp' 'icmp_ln885_2' <Predicate = (!tmp_32)> <Delay = 1.11> <CoreInst = "Cmp">   --->   Core 9 'Cmp' <Latency = 0> <II = 1> <Delay = 1.11> <FuncUnit> <Opcode : 'icmp'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 133 [1/1] (0.00ns) (grouped into LUT with out node select_ln1506_2)   --->   "%and_ln1506_6 = and i1 %icmp_ln885_2, i1 %and_ln1506_5"   --->   Operation 133 'and' 'and_ln1506_6' <Predicate = (!tmp_32)> <Delay = 0.00> <CoreInst = "LogicGate">   --->   Core 74 'LogicGate' <Latency = 0> <II = 1> <Delay = 0.33> <FuncUnit> <Opcode : 'and' 'or' 'xor'> <InPorts = 2> <OutPorts = 1>
ST_6 : Operation 134 [1/1] (0.52ns) (out node of the LUT)   --->   "%select_ln1506_2 = select i1 %and_ln1506_6, i32 0, i32 %p_Val2_9"   --->   Operation 134 'select' 'select_ln1506_2' <Predicate = (!tmp_32)> <Delay = 0.52> <CoreInst = "Sel">   --->   Core 73 'Sel' <Latency = 0> <II = 1> <Delay = 0.52> <FuncUnit> <Opcode : 'select'> <InPorts = 3> <OutPorts = 1>

State 7 <SV = 6> <Delay = 1.35>
ST_7 : Operation 135 [1/1] (0.00ns)   --->   "%specloopname_ln108 = specloopname void @_ssdm_op_SpecLoopName, void @empty_3" [nn.cpp:108]   --->   Operation 135 'specloopname' 'specloopname_ln108' <Predicate = (!tmp_32)> <Delay = 0.00>
ST_7 : Operation 136 [1/1] (1.35ns)   --->   "%store_ln111 = store i32 %select_ln1506_2, i5 %output_0_V_addr_2" [nn.cpp:111]   --->   Operation 136 'store' 'store_ln111' <Predicate = (!tmp_32)> <Delay = 1.35> <CoreInst = "RAM">   --->   Core 83 'RAM' <Latency = 1> <II = 1> <Delay = 1.35> <Storage> <Opcode : 'load' 'store'> <Ports = 2> <Width = 32> <Depth = 32> <RAM>
ST_7 : Operation 137 [1/1] (0.00ns)   --->   "%br_ln0 = br void"   --->   Operation 137 'br' 'br_ln0' <Predicate = (!tmp_32)> <Delay = 0.00>

State 8 <SV = 2> <Delay = 0.00>
ST_8 : Operation 138 [1/1] (0.00ns)   --->   "%ret_ln116 = ret" [nn.cpp:116]   --->   Operation 138 'ret' 'ret_ln116' <Predicate = true> <Delay = 0.00>


============================================================
+ Verbose Summary: Timing violations
============================================================
Target clock period: 10ns, clock uncertainty: 2.7ns.

 <State 1>: 0.489ns
The critical path consists of the following:
	multiplexor before 'phi' operation ('i', nn.cpp:108) with incoming values : ('add_ln108', nn.cpp:108) [4]  (0.489 ns)

 <State 2>: 1.35ns
The critical path consists of the following:
	'phi' operation ('i', nn.cpp:108) with incoming values : ('add_ln108', nn.cpp:108) [4]  (0 ns)
	'getelementptr' operation ('output_0_V_addr') [14]  (0 ns)
	'load' operation ('__Val2__') on array 'output_0_V' [15]  (1.35 ns)

 <State 3>: 7.27ns
The critical path consists of the following:
	'load' operation ('__Val2__') on array 'output_0_V' [15]  (1.35 ns)
	'sub' operation ('tmp.V') [17]  (1.2 ns)
	'select' operation ('tmp.V') [18]  (0.525 ns)
	'cttz' operation ('l') [20]  (0 ns)
	'sub' operation ('sub_ln894') [21]  (1.2 ns)
	'add' operation ('lsb_index') [22]  (1.2 ns)
	'shl' operation ('shl_ln899') [29]  (0 ns)
	'or' operation ('or_ln899_3') [30]  (0 ns)
	'and' operation ('and_ln899') [31]  (0 ns)
	'icmp' operation ('icmp_ln899') [32]  (1.45 ns)
	'select' operation ('select_ln896') [38]  (0 ns)
	'select' operation ('select_ln908') [46]  (0.331 ns)

 <State 4>: 6.61ns
The critical path consists of the following:
	'lshr' operation ('lshr_ln908') [41]  (0 ns)
	'select' operation ('m') [47]  (0 ns)
	'add' operation ('m') [49]  (1.47 ns)
	'select' operation ('select_ln893') [53]  (0.451 ns)
	'add' operation ('add_ln915') [56]  (1.07 ns)
	'dcmp' operation ('tmp_4') [64]  (3.61 ns)

 <State 5>: 5.49ns
The critical path consists of the following:
	'dcmp' operation ('tmp_4') [64]  (3.61 ns)
	'and' operation ('and_ln1506') [65]  (0 ns)
	'and' operation ('and_ln1506_4') [67]  (0 ns)
	'select' operation ('select_ln1506') [68]  (0.525 ns)
	'store' operation ('store_ln111', nn.cpp:111) of variable 'select_ln1506' on array 'output_0_V' [69]  (1.35 ns)

 <State 6>: 4.14ns
The critical path consists of the following:
	'dcmp' operation ('tmp_5') [122]  (3.61 ns)
	'and' operation ('and_ln1506_5') [123]  (0 ns)
	'and' operation ('and_ln1506_6') [125]  (0 ns)
	'select' operation ('select_ln1506_2') [126]  (0.525 ns)

 <State 7>: 1.35ns
The critical path consists of the following:
	'store' operation ('store_ln111', nn.cpp:111) of variable 'select_ln1506_2' on array 'output_0_V' [127]  (1.35 ns)

 <State 8>: 0ns
The critical path consists of the following:


============================================================
+ Verbose Summary: Binding
============================================================
N/A
* FSMD analyzer results:
  - Output states:
 - Input state : 
  - Chain level:
	State 1
	State 2
	State 3
	State 4
	State 5
	State 6
	State 7
	State 8


============================================================
+ Verbose Summary: Datapath Resource usage 
============================================================
N/A
